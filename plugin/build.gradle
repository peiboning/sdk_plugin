apply plugin: 'com.android.library'

android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    compileOnly project(':adinterface')
}

task copyFile(type:Copy) {
    println "-------------------------------------${rootProject.getRootDir().getPath()}/plugin/out"
    println()
    from('build/intermediates/packaged-classes/release/')
    into('out')
    include('classes.jar')
//    rename('classes.jar', '.jar')c

}

task dxJar(type: Exec){
    println "-------------------------------------exec"
    commandLine "/Users/peiboning/Library/Android/sdk/build-tools/27.0.3/dx","--dex","--output=${rootProject.getRootDir().getPath()}/plugin/out/plugin.jar","${rootProject.getRootDir().getPath()}/plugin/out/classes.jar"
}

afterEvaluate {
    assemble.dependsOn copyFile
    dxJar.dependsOn copyFile
    assemble.dependsOn dxJar

}
